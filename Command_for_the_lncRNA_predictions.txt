## Commands used during the project for lncRNA prediction

## Alignment using star
STAR --runThreadN 20 --readFilesCommand zcat --outSAMtype BAM SortedByCoordinate --outSAMstrandField intronMotif --outSAMattributes NH HI NM MD AS nM jM jI XS --outFileNamePrefix <Output_File_Prefix> --genomeDir <GenomePATH> --readFilesIn <READ1> <READ2>

## Assembly using stringTie: 
stringtie $files -o <output/individual_files.gtf> -p 20 -f 0.50 -m 200 -a 10 -j 3 -c 0.1 -g 10 -G $GTF --rf -A <output/abund_sample.tab> -C <output/cov_ref_sample.tab> -B

## gffcompare
gffcompare -r <Reference_gtf> -R -M -o sample.gffcompare.out -p Trans <GTF file>

## Cuffmerge
cuffmerge -o Organism_candidates  <assembly_GTF_list.txt>

## TransDecoder
#Prepare fasta file from the TransDecoder:
TransDecoder-TransDecoder-v5.5.0/util/gtf_genome_to_cdna_fasta.pl  <enter gtf file> <reference_genome.fa>  > <required.fasta>

#Prepare gff file from gtf
TransDecoder-TransDecoder-v5.5.0/util/gtf_to_alignment_gff3.pl <enter gtf file> > <required.gff3>

#Run the TransDecoder
TransDecoder-TransDecoder-v5.5.0/TransDecoder.LongOrfs -t required.fasta 

### CPAT
make_hexamer_tab.py  -c organism_cds.random.fa -n organism.ncrna.random.fa > organism_hexamer.tsv

make_logitModel.py  -x organism_hexamer.tsv  -c organism_cds.random.fa  -n organism.random.fa -o organism

cpat.py -g required.fasta  -d organism.logit.RData  -x organism_hexamer.tsv -o Organism_output_cpat


### CPC2
bin/CPC2.py -i required.fasta -o organism_CPC2.result

### CNIT
python CNIT.py --file=required.fa -o organism_cnit -m 've'

